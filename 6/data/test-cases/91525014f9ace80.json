{"uid":"91525014f9ace80","name":"updateExistingBookSuccessfully()","fullName":"com.bookstore.api.tests.BookApiTest.updateExistingBookSuccessfully","historyId":"1ea43ce5473168942788d8949059ebbb","time":{"start":1745271693676,"stop":1745271699286,"duration":5610},"description":"","status":"failed","statusMessage":"[Book with ID 99 was not updated correctly] \nexpected: \n  BookDTO(id=99, title=Updated book title, description=Updated description, pageCount=250, excerpt=Updated excerpt here, publishDate=2025-04-21T21:41:38.271Z)\n but was: \n  BookDTO(id=99, title=Book 99, description=Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n  , pageCount=9900, excerpt=Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n  Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n  Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n  Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n  Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n  , publishDate=2025-01-12T21:41:39.2185561+00:00)","statusTrace":"org.opentest4j.AssertionFailedError: [Book with ID 99 was not updated correctly] \nexpected: \n  BookDTO(id=99, title=Updated book title, description=Updated description, pageCount=250, excerpt=Updated excerpt here, publishDate=2025-04-21T21:41:38.271Z)\n but was: \n  BookDTO(id=99, title=Book 99, description=Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n  , pageCount=9900, excerpt=Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n  Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n  Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n  Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n  Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n  , publishDate=2025-01-12T21:41:39.2185561+00:00)\n\tat com.bookstore.api.tests.BookApiTest.updateExistingBookSuccessfully(BookApiTest.java:162)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"","status":"failed","statusMessage":"[Book with ID 99 was not updated correctly] \nexpected: \n  BookDTO(id=99, title=Updated book title, description=Updated description, pageCount=250, excerpt=Updated excerpt here, publishDate=2025-04-21T21:41:38.271Z)\n but was: \n  BookDTO(id=99, title=Book 99, description=Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n  , pageCount=9900, excerpt=Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n  Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n  Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n  Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n  Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n  , publishDate=2025-01-12T21:41:39.2185561+00:00)","statusTrace":"org.opentest4j.AssertionFailedError: [Book with ID 99 was not updated correctly] \nexpected: \n  BookDTO(id=99, title=Updated book title, description=Updated description, pageCount=250, excerpt=Updated excerpt here, publishDate=2025-04-21T21:41:38.271Z)\n but was: \n  BookDTO(id=99, title=Book 99, description=Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n  , pageCount=9900, excerpt=Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n  Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n  Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n  Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n  Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n  , publishDate=2025-01-12T21:41:39.2185561+00:00)\n\tat com.bookstore.api.tests.BookApiTest.updateExistingBookSuccessfully(BookApiTest.java:162)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)\n","steps":[{"name":"Get books list","time":{"start":1745271694765,"stop":1745271698270,"duration":3505},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Update an existing book","time":{"start":1745271698283,"stop":1745271698953,"duration":670},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"bookId","value":"99"},{"name":"bookDTO","value":"BookDTO(id=99, title=Updated book title, description=Updated description, pageCount=250, excerpt=Updated excerpt here, publishDate=2025-04-21T21:41:38.271Z)"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Get specific book by ID","time":{"start":1745271698953,"stop":1745271699282,"duration":329},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"bookId","value":"99"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:com.bookstore.api.tests.BookApiTest]/[method:updateExistingBookSuccessfully()]"},{"name":"host","value":"fv-az1369-50"},{"name":"thread","value":"2134@fv-az1369-50.ForkJoinPool-1-worker-3(28)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"com.bookstore.api.tests.BookApiTest"},{"name":"testClass","value":"com.bookstore.api.tests.BookApiTest"},{"name":"testMethod","value":"updateExistingBookSuccessfully"},{"name":"suite","value":"com.bookstore.api.tests.BookApiTest"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"91525014f9ace80.json","parameterValues":[]}