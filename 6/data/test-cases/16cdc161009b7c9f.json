{"uid":"16cdc161009b7c9f","name":"deleteNonExistingBook()","fullName":"com.bookstore.api.tests.BookApiTest.deleteNonExistingBook","historyId":"caca9e8b809faed455a4500d3aa99895","time":{"start":1745271706815,"stop":1745271707738,"duration":923},"description":"","status":"failed","statusMessage":"[Expected 404 Not Found when deleting book with non-existing ID 201, but got 200] \nexpected: 404\n but was: 200","statusTrace":"org.opentest4j.AssertionFailedError: [Expected 404 Not Found when deleting book with non-existing ID 201, but got 200] \nexpected: 404\n but was: 200\n\tat com.bookstore.api.tests.BookApiTest.deleteNonExistingBook(BookApiTest.java:200)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"","status":"failed","statusMessage":"[Expected 404 Not Found when deleting book with non-existing ID 201, but got 200] \nexpected: 404\n but was: 200","statusTrace":"org.opentest4j.AssertionFailedError: [Expected 404 Not Found when deleting book with non-existing ID 201, but got 200] \nexpected: 404\n but was: 200\n\tat com.bookstore.api.tests.BookApiTest.deleteNonExistingBook(BookApiTest.java:200)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)\n","steps":[{"name":"Get books list","time":{"start":1745271706816,"stop":1745271707432,"duration":616},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:com.bookstore.api.tests.BookApiTest]/[method:deleteNonExistingBook()]"},{"name":"host","value":"fv-az1369-50"},{"name":"thread","value":"2134@fv-az1369-50.ForkJoinPool-3-worker-3(46)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"com.bookstore.api.tests.BookApiTest"},{"name":"testClass","value":"com.bookstore.api.tests.BookApiTest"},{"name":"testMethod","value":"deleteNonExistingBook"},{"name":"suite","value":"com.bookstore.api.tests.BookApiTest"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"f66de937f1559639","status":"failed","statusDetails":"[Expected 404 Not Found when deleting book with non-existing ID 201, but got 200] \nexpected: 404\n but was: 200","time":{"start":1745271703425,"stop":1745271704327,"duration":902}},{"uid":"479f5e20148c1010","status":"failed","statusDetails":"[Expected 404 Not Found when deleting book with non-existing ID 201, but got 200] \nexpected: 404\n but was: 200","time":{"start":1745271700304,"stop":1745271701236,"duration":932}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"16cdc161009b7c9f.json","parameterValues":[]}