{"uid":"c92f322d48a9c339","name":"updateExistingBookSuccessfully()","fullName":"com.bookstore.api.tests.BookApiTest.updateExistingBookSuccessfully","historyId":"1ea43ce5473168942788d8949059ebbb","time":{"start":1745309011315,"stop":1745309013089,"duration":1774},"description":"","status":"failed","statusMessage":"[Book with ID 54 was not updated correctly] \nexpected: \n  BookDTO(id=54, title=Updated book title, description=Updated description, pageCount=250, excerpt=Updated excerpt here, publishDate=2025-04-22T08:03:32.127Z)\n but was: \n  BookDTO(id=54, title=Book 54, description=Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n  , pageCount=5400, excerpt=Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n  Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n  Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n  Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n  Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n  , publishDate=2025-02-27T08:03:32.986637+00:00)","statusTrace":"org.opentest4j.AssertionFailedError: [Book with ID 54 was not updated correctly] \nexpected: \n  BookDTO(id=54, title=Updated book title, description=Updated description, pageCount=250, excerpt=Updated excerpt here, publishDate=2025-04-22T08:03:32.127Z)\n but was: \n  BookDTO(id=54, title=Book 54, description=Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n  , pageCount=5400, excerpt=Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n  Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n  Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n  Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n  Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n  , publishDate=2025-02-27T08:03:32.986637+00:00)\n\tat com.bookstore.api.tests.BookApiTest.updateExistingBookSuccessfully(BookApiTest.java:162)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.tryRemoveAndExec(ForkJoinPool.java:1351)\n\tat java.base/java.util.concurrent.ForkJoinTask.awaitDone(ForkJoinTask.java:422)\n\tat java.base/java.util.concurrent.ForkJoinTask.join(ForkJoinTask.java:651)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"","status":"failed","statusMessage":"[Book with ID 54 was not updated correctly] \nexpected: \n  BookDTO(id=54, title=Updated book title, description=Updated description, pageCount=250, excerpt=Updated excerpt here, publishDate=2025-04-22T08:03:32.127Z)\n but was: \n  BookDTO(id=54, title=Book 54, description=Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n  , pageCount=5400, excerpt=Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n  Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n  Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n  Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n  Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n  , publishDate=2025-02-27T08:03:32.986637+00:00)","statusTrace":"org.opentest4j.AssertionFailedError: [Book with ID 54 was not updated correctly] \nexpected: \n  BookDTO(id=54, title=Updated book title, description=Updated description, pageCount=250, excerpt=Updated excerpt here, publishDate=2025-04-22T08:03:32.127Z)\n but was: \n  BookDTO(id=54, title=Book 54, description=Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n  , pageCount=5400, excerpt=Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n  Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n  Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n  Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n  Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n  , publishDate=2025-02-27T08:03:32.986637+00:00)\n\tat com.bookstore.api.tests.BookApiTest.updateExistingBookSuccessfully(BookApiTest.java:162)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.tryRemoveAndExec(ForkJoinPool.java:1351)\n\tat java.base/java.util.concurrent.ForkJoinTask.awaitDone(ForkJoinTask.java:422)\n\tat java.base/java.util.concurrent.ForkJoinTask.join(ForkJoinTask.java:651)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)\n","steps":[{"name":"Get books list","time":{"start":1745309011319,"stop":1745309012127,"duration":808},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Update an existing book","time":{"start":1745309012127,"stop":1745309012592,"duration":465},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"bookId","value":"54"},{"name":"bookDTO","value":"BookDTO(id=54, title=Updated book title, description=Updated description, pageCount=250, excerpt=Updated excerpt here, publishDate=2025-04-22T08:03:32.127Z)"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Get specific book by ID","time":{"start":1745309012592,"stop":1745309013084,"duration":492},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"bookId","value":"54"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:com.bookstore.api.tests.BookApiTest]/[method:updateExistingBookSuccessfully()]"},{"name":"host","value":"fv-az791-674"},{"name":"thread","value":"2065@fv-az791-674.ForkJoinPool-3-worker-2(45)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"com.bookstore.api.tests.BookApiTest"},{"name":"testClass","value":"com.bookstore.api.tests.BookApiTest"},{"name":"testMethod","value":"updateExistingBookSuccessfully"},{"name":"suite","value":"com.bookstore.api.tests.BookApiTest"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"1d2f620217b57b96","status":"failed","statusDetails":"[Book with ID 192 was not updated correctly] \nexpected: \n  BookDTO(id=192, title=Updated book title, description=Updated description, pageCount=250, excerpt=Updated excerpt here, publishDate=2025-04-22T08:03:27.485Z)\n but was: \n  BookDTO(id=192, title=Book 192, description=Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n  , pageCount=19200, excerpt=Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n  Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n  Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n  Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n  Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n  , publishDate=2024-10-12T08:03:28.3019874+00:00)","time":{"start":1745309006547,"stop":1745309008388,"duration":1841}},{"uid":"d067e82bbf07683b","status":"failed","statusDetails":"[Book with ID 18 was not updated correctly] \nexpected: \n  BookDTO(id=18, title=Updated book title, description=Updated description, pageCount=250, excerpt=Updated excerpt here, publishDate=2025-04-22T08:03:21.347Z)\n but was: \n  BookDTO(id=18, title=Book 18, description=Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n  , pageCount=1800, excerpt=Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n  Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n  Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n  Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n  Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n  , publishDate=2025-04-04T08:03:22.5852167+00:00)","time":{"start":1745308996762,"stop":1745309002679,"duration":5917}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":3},"items":[{"uid":"52ff67c1a38d4880","reportUrl":"https://alex-sviatenko.github.io/bookstore-api-test/6//#testresult/52ff67c1a38d4880","status":"failed","statusDetails":"[Book with ID 70 was not updated correctly] \nexpected: \n  BookDTO(id=70, title=Updated book title, description=Updated description, pageCount=250, excerpt=Updated excerpt here, publishDate=2025-04-21T21:45:13.942Z)\n but was: \n  BookDTO(id=70, title=Book 70, description=Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n  , pageCount=7000, excerpt=Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n  Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n  Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n  Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n  Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n  , publishDate=2025-02-10T21:45:14.7745081+00:00)","time":{"start":1745271913087,"stop":1745271914868,"duration":1781}},{"uid":"f0773e1b5f849fe1","reportUrl":"https://alex-sviatenko.github.io/bookstore-api-test/6//#testresult/f0773e1b5f849fe1","status":"failed","statusDetails":"[Book with ID 91 was not updated correctly] \nexpected: \n  BookDTO(id=91, title=Updated book title, description=Updated description, pageCount=250, excerpt=Updated excerpt here, publishDate=2025-04-21T21:41:46.125Z)\n but was: \n  BookDTO(id=91, title=Book 91, description=Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n  , pageCount=9100, excerpt=Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n  Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n  Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n  Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n  Lorem lorem lorem. Lorem lorem lorem. Lorem lorem lorem.\n  , publishDate=2025-01-20T21:41:46.7249198+00:00)","time":{"start":1745271705503,"stop":1745271706789,"duration":1286}}]},"tags":[]},"source":"c92f322d48a9c339.json","parameterValues":[]}